AWSTemplateFormatVersion: 2010-09-09
Description: VPC Template for CloudFormation Demo
#Metadata:

Parameters:
  StackPrefix:
    Description: Stack Resource Name Prefix
    Type: String
    Default: Demo    
  # If you need more enviroment type then you can customize these allowed values
  EnvironmentType:
    Description: The environment type
    Type: String
    AllowedValues: ["Dev", "Staging", "Production"]
    Default: Dev
        
Mappings:
  # VPC/Subnet Cidr Block for Environment Type
  # If you need more IP addresses then you can customize these ranges
  CidrConfig:
    Dev:
      VPC: 10.0.0.0/16
      PublicOne: 10.0.0.0/24
      PublicTwo: 10.0.1.0/24
      PrivateOne: 10.0.2.0/24
      PrivateTwo: 10.0.3.0/24
      PrivateThree: 10.0.4.0/24
      PrivateFour: 10.0.5.0/24
    Staging:
      VPC: 10.1.0.0/16
      PublicOne: 10.1.0.0/24
      PublicTwo: 10.1.1.0/24
      PrivateOne: 10.1.2.0/24
      PrivateTwo: 10.1.3.0/24
      PrivateThree: 10.0.4.0/24
      PrivateFour: 10.0.5.0/24
    Production:
      VPC: 10.2.0.0/16
      PublicOne: 10.2.0.0/24
      PublicTwo: 10.2.1.0/24
      PrivateOne: 10.2.2.0/24
      PrivateTwo: 10.2.3.0/24
      PrivateThree: 10.0.4.0/24
      PrivateFour: 10.0.5.0/24

#Conditions:

Resources:
  #VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [CidrConfig, !Ref EnvironmentType, VPC]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-VPC
  #Public Subnets  
  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrConfig, !Ref EnvironmentType, PublicOne]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PubSubnet1
  PublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrConfig, !Ref EnvironmentType, PublicTwo]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PubSubnet2          
  #Private Subnets
  PrivateSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrConfig, !Ref EnvironmentType, PrivateOne]
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PrivSubnet1          
  PrivateSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrConfig, !Ref EnvironmentType, PrivateTwo]
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PrivSubnet2          
  PrivateSubnetThree:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrConfig, !Ref EnvironmentType, PrivateThree]
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PrivSubnet3
  PrivateSubnetFour:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrConfig, !Ref EnvironmentType, PrivateFour]
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PrivSubnet4
  #Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-IGW
  GatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  #Public RouteTable
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PubRT          
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachement
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetOne
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetTwo
      RouteTableId: !Ref PublicRouteTable  
  #Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC        
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PrivRT
  PrivateSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetOne
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetTwo
      RouteTableId: !Ref PrivateRouteTable  
  PrivateSubnetThreeRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetThree
      RouteTableId: !Ref PrivateRouteTable  
  PrivateSubnetFourRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetFour
      RouteTableId: !Ref PrivateRouteTable              
Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:  
      Name: !Sub ${StackPrefix}-VPC-ID
  VPCCIDR:
    Description: VPC CIDR
    Value: !GetAtt VPC.CidrBlock
    Export:  
      Name: !Sub ${StackPrefix}-VPC-CIDR
  PublicSubnetOneId:
    Description: Public subnet one ID
    Value: !Ref PublicSubnetOne
    Export:
      Name: !Sub ${StackPrefix}-PublicSubnetOneId
  PublicSubnetTwoId:
    Description: Public subnet two ID
    Value: !Ref PublicSubnetTwo
    Export:
      Name: !Sub ${StackPrefix}-PublicSubnetTwoId
  PrivateSubnetOneId:
    Description: Private subnet one ID
    Value: !Ref PrivateSubnetOne
    Export:
      Name: !Sub ${StackPrefix}-PrivateSubnetOneId
  PrivateSubnetTwoId:
    Description: Private subnet two ID
    Value: !Ref PrivateSubnetTwo
    Export:
      Name: !Sub ${StackPrefix}-PrivateSubnetTwoId
  PrivateSubnetThreeId:
    Description: Private subnet three ID
    Value: !Ref PrivateSubnetThree
    Export:
      Name: !Sub ${StackPrefix}-PrivateSubnetThreeId
  PrivateSubnetFourId:
    Description: Private subnet four ID
    Value: !Ref PrivateSubnetFour
    Export:
      Name: !Sub ${StackPrefix}-PrivateSubnetFourId      
  PrivateRouteTableId:
    Description: Private Route Table ID
    Value: !Ref PrivateRouteTable
    Export: 
      Name: !Sub ${StackPrefix}-PrivateRouteTableId