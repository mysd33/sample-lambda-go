AWSTemplateFormatVersion: 2010-09-09
Description: SecurityGroup Template for CloudFormation Demo. Depends on cfn-vpc.yaml.
#Metadata: 

Parameters: 
  StackPrefix:
    Description: Stack Resource Name Prefix
    Type: String
    Default: Demo 

#Mappings: 

#Conditions: 

Resources:
# Security Group of Bation EC2
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Bastion Security Group
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-Bastion-SG
# Security Group for API Gateway Private API VPC Endpoint  
  PrivateAPISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      GroupDescription: the API Gateway Private API Security Group
      SecurityGroupIngress:
        # Allow to access from the Bation
        - SourceSecurityGroupId: !Ref BastionSecurityGroup
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443          
          #CidrIp: !FindInMap [CidrConfig, !Ref EnvironmentType, VPC]
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-PrivateAPI-SG          
# Security Group of Lambda
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Lambda Security Group
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-Lambda-SG 
# Security Group of RDS Proxy
  RDSProxySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:      
      GroupDescription: RDS Proxy Security Group
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref LambdaSecurityGroup
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          Description: Ingress from Lambda      
        - SourceSecurityGroupId: !Ref BastionSecurityGroup
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          Description: Ingress from the Bastion          
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-RDSProxy-SG           
# Security Group of RDS Aurora
  AuroraSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:      
      GroupDescription: Aurora Security Group
      VpcId:
        Fn::ImportValue: !Sub ${StackPrefix}-VPC-ID
      SecurityGroupIngress:            
        - SourceSecurityGroupId: !Ref RDSProxySecurityGroup
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          Description: Ingress from RDS Proxy               
        - SourceSecurityGroupId: !Ref BastionSecurityGroup
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          Description: Ingress from the Bastion        
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-Aurora-SG           
Outputs:
  BastionSecurityGroupID:
    Description: BastionSecurityGroup ID
    Value:  !Ref BastionSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-BastionSecurityGroup-ID     
  LambdaSecurityGroupID:
    Description: LambdaSecurityGroup ID
    Value:  !Ref LambdaSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-LambdaSecurityGroup-ID          
  PrivateAPISecurityGroupID:
    Description: PrivateAPISecurityGroup ID
    Value:  !Ref PrivateAPISecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-PrivateAPISecurityGroup-ID
  RDSProxySecurityGroupID:
    Description: RDSProxySecurityGroup ID
    Value:  !Ref RDSProxySecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-RDSProxySecurityGroup-ID   
  AuroraSecurityGroupID:
    Description: AuroraSecurityGroup ID
    Value:  !Ref AuroraSecurityGroup
    Export: 
      Name: !Sub ${StackPrefix}-AuroraSecurityGroup-ID