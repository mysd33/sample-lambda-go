AWSTemplateFormatVersion: 2010-09-09
Description: RDS Aurora PostgreSQL RDS Proxy Template for CloudFormation Demo. Depends on cfn-iam.yaml, cfn-vpc.yaml, cfn-sg.yaml
#Metadata: 

Parameters: 
  StackPrefix:
    Description: Stack Resource Name Prefix
    Type: String
    Default: Demo
  DBUsername:
    NoEcho: 'true'
    Description: Username for PostgreSQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password for PostgreSQL database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBName:
    Description: Database Name
    Type: String
    Default: testdb
  DBEngineVersion:
    Description: Version number of the database engine
    Type: String
    Default: 14.6  
  DBEngineFamily:
    Description: Family of the database engine
    Type: String
    Default: aurora-postgresql14
  #DBInstanceClassName:
  #  Description: DB Instance Class
  #  Type: String
  #  #https://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html#Concepts.DBInstanceClass.SupportAurora
  #  Default: db.t3.medium    
  #  #Default: db.r5.large
  AuroraServerlessMaxCapacity: 
    Description: Aurora Serverless V2 ScalingConfiguration MaxCapacity
    Type: Number
    Default: 2
  AuroraServerlessMinCapacity: 
    Description: Aurora Serverless V2 ScalingConfiguration MinCapacity
    Type: Number
    Default: 0.5

Resources:
# RDS Aurora
  RDSDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub ${StackPrefix}-RDSDBSubnetGroup
      DBSubnetGroupDescription: Aurora for PostgreSQL DB Subnet group
      SubnetIds:
        - Fn::ImportValue: !Sub ${StackPrefix}-PrivateSubnetThreeId
        - Fn::ImportValue: !Sub ${StackPrefix}-PrivateSubnetFourId

  RDSCluster:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      DatabaseName: !Ref DBName
      # Reference To Create Customize Parameters Group 
      # https://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Reference.ParameterGroups.html      
      DBClusterParameterGroupName: !Sub default.${DBEngineFamily}
      DBClusterIdentifier: aurora-postgresql-cluster
      DBSubnetGroupName: !Ref RDSDBSubnetGroup      
      EnableCloudwatchLogsExports:
        - postgresql
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      Port: 5432
      VpcSecurityGroupIds:
        - Fn::ImportValue: !Sub ${StackPrefix}-AuroraSecurityGroup-ID          
      ServerlessV2ScalingConfiguration: 
        MaxCapacity: !Ref AuroraServerlessMaxCapacity
        MinCapacity: !Ref AuroraServerlessMinCapacity


  RDSDBInstance1:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBClusterIdentifier: !Ref RDSCluster
      DBInstanceClass: db.serverless
      #DBInstanceClass: !Ref DBInstanceClassName      
      DBInstanceIdentifier: aurora-postgresql-instance1      
      Engine: aurora-postgresql
  
  RDSDBInstance2:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBClusterIdentifier: !Ref RDSCluster
      DBInstanceClass: db.serverless
      #DBInstanceClass: !Ref DBInstanceClassName
      DBInstanceIdentifier: aurora-postgresql-instance2      
      Engine: aurora-postgresql

# Secrets Manager
  RDSSecretsManager:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${StackPrefix}-RDS-Secrets
      Description: RDS Aurora Secrets
      SecretString: !Sub '{
        "username": "${DBUsername}",
        "password": "${DBPassword}"
        }'
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-SecretsManager     

# RDS Proxy
  RDSProxy:
    Type: AWS::RDS::DBProxy
    Properties:
      Auth:
        - AuthScheme: SECRETS
          SecretArn: !Ref RDSSecretsManager            
          IAMAuth: DISABLED
      DBProxyName: !Sub ${StackPrefix}-rds-proxy
      DebugLogging: false
      EngineFamily: POSTGRESQL      
      RequireTLS: false
      RoleArn:
        Fn::ImportValue: !Sub ${StackPrefix}-RDSProxyRoleArn
      VpcSecurityGroupIds: 
        - Fn::ImportValue: !Sub ${StackPrefix}-RDSProxySecurityGroup-ID 
      VpcSubnetIds:
        - Fn::ImportValue: !Sub ${StackPrefix}-PrivateSubnetThreeId
        - Fn::ImportValue: !Sub ${StackPrefix}-PrivateSubnetFourId

  DBProxyTargetGroup:
    Type: AWS::RDS::DBProxyTargetGroup
    Properties:
      DBProxyName: !Ref RDSProxy
      DBClusterIdentifiers:
        - !Ref RDSCluster
      TargetGroupName: default
Outputs:
  RDSClusterID:
    Description: RDS Aurora Cluster ID
    Value: !Ref RDSCluster
    Export: 
      Name: !Sub ${StackPrefix}-RDSClusterID
  RDSClusterEndpointAddress:
    Description: RDS Aurora Cluster Endpoint Address
    Value: !GetAtt RDSCluster.Endpoint.Address
    Export: 
      Name: !Sub ${StackPrefix}-RDSClusterEndpointAddress
  RDSReaderEndpointAddress:
    Description: RDS AuroraReader Endpoint Address
    Value: !GetAtt RDSCluster.ReadEndpoint.Address
    Export: 
      Name: !Sub ${StackPrefix}-RDSReaderEndpointAddress
  RDSClusterEndpointPort:
    Description: RDS Aurora Cluster Endpoint Port
    Value: !GetAtt RDSCluster.Endpoint.Port
    Export: 
      Name: !Sub ${StackPrefix}-RDSClusterEndpointPort
  RDSDBName:
    Description: RDS Database Name
    Value: !Ref DBName
    Export: 
      Name: !Sub ${StackPrefix}-RDSDBName
  RDSSecretsManagerArn:
    Description: RDS Secrets Manager Arn
    Value: !Ref RDSSecretsManager
    Export: 
      Name: !Sub ${StackPrefix}-RDSSecretsManagerArn
  RDSProxyEndpoint:
    Description: RDS Proxy Endpoint
    Value: !GetAtt RDSProxy.Endpoint
    Export: 
      Name: !Sub ${StackPrefix}-RDSProxyEndpoint      